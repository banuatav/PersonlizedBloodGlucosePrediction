nu_Sigma,
a0_par,
betabar_par,
upsilonbeta_par,
nubeta,
alpha_par,
m,
Dcon,
Dstar,
J
)
rm(betabar_bound_vector)
################################## Main MCMC ################################
###################################################################################################
###########################                            ############################################
###########################   MCMC SAMPLER DPMM LOGIT  ############################################
###########################                            ############################################
###################################################################################################
################################## MCMC Specs ########
# 1. Specify Simulation parameters
number_samples      = 10          #SET5#
samplesize          = 10        #SET6#
maxClus             = 100          #SET9#
start_sample_number = 1
start_iter_number   = 1
iter_number_to_load = NULL
m                   = 3
s                   = 0
TrialNr             = "2010_A1"
Name_Sim            = paste0("Simulation", "_", TrialNr)  #SET10#
precisionmeasure    = 2
thin                = 2
burnin              = 1
MCMCpar = list(number_samples = number_samples, start_iter_number = start_iter_number, samplesize = samplesize, maxClus = maxClus, m = m, start_sample_number=start_sample_number, s = s, thin = thin, burnin = burnin, precisionmeasure = precisionmeasure)
# 2. Set working directory
setwd("~/Master Thesis/20. Final Results/2010_A1")
# 3. Load data & sink
load("DatasetA1.RData")
#sink(file = paste0("Console_",Name_Sim, ".txt"), append = TRUE)
source('Packages_and_Functions_SpeedUp.R')
################################## Specify Data ########
y       = SaveDat$y
y_p     = SaveDat$y_p
X_con   = as.matrix(SaveDat$X_con)
X_cat   = as.matrix(SaveDat$X_cat)
X_p     = as.matrix(SaveDat$X_p)
Dummy   = as.matrix(SaveDat$Dummy)
Dummy_p = as.matrix(SaveDat$Dummy_p)
remove(SaveDat)
J     = max(unique(y))
Dcon  = dim(X_con)[2]
Dcat  = dim(X_cat)[2]
Dstar = (J - 1) * (1 + Dcon + sum(apply(X_cat, 2, max) - 1))
if(MCMCpar$s == 0){
MCMCpar$s = 2.38/sqrt(Dstar)
}
################################## Prior ########################################################## ########
mu_mu_par          = matrix(c(-2,2), nrow = Dcon, ncol =2, byrow = TRUE)
upsilon_mu_par     = c(0.5, 1.5)
nu_mu              = 25
upsilon_Sigma_par  = c(1, 2)
nu_Sigma           = 10
a0_par           = matrix(rep(c(1,1000), Dcat), nrow = Dcat, 2, byrow = TRUE)  #SET15#
betabar_bound_vector  = rep(c(-5, 5), Dstar) #SET16#
betabar_par      = matrix(
betabar_bound_vector,
nrow = Dstar,
ncol = 2,
byrow = TRUE
)
upsilonbeta_par  = c(0.5, 5)                  #SET17#
nubeta           = 250             #SET18#
alpha_par        = c(2, 1)                     #SET19#
PriorPar = list(
mu_mu_par          =   mu_mu_par,
upsilon_mu_par     = upsilon_mu_par,
nu_mu              =  nu_mu,
upsilon_Sigma_par  = upsilon_Sigma_par,
nu_Sigma           = nu_Sigma,
a0_par = a0_par,
betabar_par = betabar_par,
upsilonbeta_par = upsilonbeta_par,
nubeta = nubeta,
alpha_par  = alpha_par
)
rm(
mu_mu_par,
upsilon_mu_par,
nu_mu,
upsilon_Sigma_par,
nu_Sigma,
a0_par,
betabar_par,
upsilonbeta_par,
nubeta,
alpha_par,
m,
Dcon,
Dstar,
J
)
rm(betabar_bound_vector)
################################## Main MCMC ################################
if(start_sample_number == 1 && start_iter_number == 1 ){
number_samples = dpmm_mnl_gibbs(y = y, y_p= y_p,  X_con = X_con, X_cat= X_cat, X_p = X_p, Dummy =  Dummy, Dummy_p= Dummy_p, PriorPar=PriorPar, MCMCpar)
} else {
load(file = paste0("I", iter_number_to_load, ".RData"))
number_samples = dpmm_mnl_gibbs(y = y, y_p= y_p,  X_con = X_con, X_cat= X_cat, X_p = X_p, Dummy =  Dummy, Dummy_p= Dummy_p, PriorPar=PriorPar, MCMCpar = MCMCpar, I = I_s)
}
load("~/Master Thesis/20. Final Results/2010_A1/PredictionProb5.RData")
predictionprob[1,]
predictionprob[1,1:7]
max(predictionprob[1,1:7])
predictionprob[1,1:7]/sum(predictionprob[1,1:7])
install.packages("devtools")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
install.packages("roxygen2", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(roxygen2)
install.packages("xml2", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(roxygen2)
setwd("~/")
create("DPMM_mlogit")
?create
library(devtools)
?create
create("DPMM_mlogit")
create("DPMMmlogit")
install("DPMMmlogit")
setwd("~/")
install("cats")
install("DPMMmlogit")
install("DPMMmlogit")
install.packages("Rcpp.package.skeleton", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("MCMCpack", "haven", "mvtnorm", "openssl", "readxl"))
install.packages("Rcpp.package.skeleton", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("MCMCpack", "Rcpp", "haven", "mvtnorm", "openssl", "readxl"))
int <- c(9L, 10L, 11L, 12L, 13L)
int
int2 <- c(9, 10, 11, 12, 13)
library(readr)
Data_BG <- read_csv("~/Desktop/Data BG.csv",
col_names = FALSE, col_types = cols(Tijd = col_time(format = "%H:%M")))
View(Data_BG)
library(readr)
Data_BG <- read_csv("~/Desktop/Data BG.csv",
col_types = cols(Tijd = col_time(format = "%H:%M")))
View(Data_BG)
typeof(Data_BG[,1])
typeof(Data_BG[,2])
typeof(Data_BG$Dag)
head(Data_BG)
dim(Data_BG)
table(Data_BG)
table(Data_BG$Dag)
table(Data_BG$Gebeurtenis)
table(Data_BG$Eenheid)
sum(is.na(Data_BG$Informatie))
Data_BG$Informatie[!is.na(Data_BG$Informatie)]
sum(is.na(Data_BG$X8))
df = Data_BG[,-8]
rm(Data_BG)
save(df, file = "BGandInsulineData")
save(df, file = "BGandInsulineData.RData")
summary(df)
describe(mydata)
library(psych)
describe(mydata)
describe(df)
?read.csv
df = read.csv("Data BG.csv", header = TRUE)
setwd("~/Desktop")
df = read.csv("Data BG.csv", header = TRUE)
View(df)
summary(df)
str(df)
table(df$Informatie1)
df$Informatie1 == "Tijd van de dag gewijzigd naar 12"
df$Datum[df$Informatie1 == "Tijd van de dag gewijzigd naar 12"]
df[df$Datum == "29.10.18"]
df[df$Datum == "29.10.18",]
df[181,]
df = df[-181,]
table(df$Informatie1)
df$Datum[df$Informatie1 == "Occlusie gevonden."]
df[df$Datum == "18.09.18",]
print(df[905,])
print(df[904,])
View(df)
setwd("~/Desktop")
df = read.csv("Data BG.csv", header = TRUE)
str(df)
summary(df)
table(df$Informatie1)
df$Datum[df$Informatie1 == "Tijd van de dag gewijzigd naar 12"]
df[df$Datum == "29.10.18",]
print(df[181,])
df$Datum[df$Informatie1 == "Occlusie gevonden."]
df[df$Datum == "18.09.18",]
print(df[905,])
table(df$Informatie1)
df$Datum[df$Informatie1 == "V\x97\x97r maaltijd"]
df$Datum[df$Informatie1 == "V/\x97/\x97r maaltijd"]
df$Datum[df$Informatie1 == "V\\x97\\x97r maaltijd"]
"V\\x97\\x97r maaltijd"
"V\x97\x97r maaltijd"
df$Datum[df$Informatie1 == "V\x97\x97r maaltijd"]
levels(df$Informatie1)
df$Datum[df$Informatie1 == "V\x97\x97r maaltijd "]
df[df$Datum == c("03.10.18", "11.08.18"),]
df[df$Datum == "11.08.18"),]
df[df$Datum == "03.10.18",]
df[df$Datum == "11.08.18",]
print(df[c(621,1653),])
table(df$Informatie1)
table(df$Informatie2)
table(df$Informatie3)
table(df$Informatie4)
setwd("~/Desktop")
df = read.csv("Data BG.csv", header = TRUE)
str(df)
summary(df)
table(df$Informatie1)
df$Datum[df$Informatie1 == "Tijd van de dag gewijzigd naar 12"]
df[df$Datum == "29.10.18",]
print(df[181,])
df$Datum[df$Informatie1 == "Occlusie gevonden."]
df[df$Datum == "18.09.18",]
print(df[905,])
df$Datum[df$Informatie1 == "Voor maaltijd "]
df[df$Datum == "11.08.18",]
df[df$Datum == "03.10.18",]
print(df[c(621,1653),])
setwd("~/Desktop")
df = read.csv("Data BG.csv", header = TRUE)
str(df)
summary(df)
table(df$Informatie1)
df$Datum[df$Informatie1 == "Tijd van de dag gewijzigd naar 12"]
df[df$Datum == "29.10.18",]
print(df[181,])
df$Datum[df$Informatie1 == "Occlusie gevonden."]
df[df$Datum == "18.09.18",]
print(df[905,])
df$Datum[df$Informatie1 == "Voor maaltijd "]
df[df$Datum == "11.08.18",]
df[df$Datum == "03.10.18",]
print(df[c(621,1653),])
levels[df$Gebeurtenis]
levels(df$Gebeurtenis)
table(df$Gebeurtenis)
Data = df
summar(Data)
summary(Data)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(df)
summary(Data)
summary(Data)
setwd("~/Documents/GitHub/PersonlizedBloodGlucosePrediction")
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
summary(BGData$Descripition3)
summary(BGData$Descripition1)
summary(BGData$Descripition2)
summary(BGData$Descripition3)
summary(BGData$Descripition4)
BGData = read.csv("Data BG.csv", header = TRUE)
summary(BGData$Descripition4)
BGData = read.csv("Data BG.csv", header = TRUE)
summary(BGData$Descripition4)
summary(BGData$Descripition3)
summary(BGData$Descripition2)
summary(BGData$Descripition1)
BGData = read.csv("Data BG.csv", header = TRUE)
summary(BGData$Descripition1)
summary(BGData$Descripition2)
summary(BGData$Descripition3)
summary(BGData$Descripition4)
summary(BGData$Descripition5)
BGData = read.csv("Data BG.csv", header = TRUE)
summary(BGData$Descripition5)
summary(BGData)
BGData = read.csv("Data BG.csv", header = TRUE)
Carbs = rep(NA, 3343)
Bloodglucose = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Event == "Carbs"
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
summary(cbind(BGData$Value, Carbs))
head(cbind(BGData$Value, Carbs))
head(cbind(BGData$Event, BGData$Value, Carbs))
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(cbind(BGData$Event, BGData$Value, Carbs))
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
head(data.frame(BGData$Event, BGData$Value, Carbs))
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(data.frame(BGData$Event, BGData$Value, Carbs))
Bloodglucose = rep(NA, 3343)
Bloodglucose[BGData$Event == "Bloodglucose"] = BGData$Value[BGData$Event == "Bloodglucose"]
head(data.frame(BGData$Event, BGData$Value, Bloodglucose))
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
head(BGData)
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
head(BGData)
summary(BGData[,c(4,5,7:14)])
summary(BGData[,c(4:14)])
levels(BGData[,c(4:14)])
levels(BGData$Event)
BGData$Event = factor(BGData$Event)
levels(BGData$Event)
levels(BGData$Event)
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(data.frame(BGData$Event, BGData$Value, Carbs))
Bloodglucose = rep(NA, 3343)
Bloodglucose[BGData$Event == "Bloodglucose"] = BGData$Value[BGData$Event == "Bloodglucose"]
head(data.frame(BGData$Event, BGData$Value, Bloodglucose))
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
BGData$Event = factor(BGData$Event)
head(BGData)
levels(BGData$Event)
head(BGData[BGData$Event == c(1,2,3),])
head(BGData[BGData$Event == 1|BGData$Event == 2|BGData$Event == 3),])
head(BGData[BGData$Event == 1|BGData$Event == 2|BGData$Event == 3,])
summary(BGData[BGData$Event == 1|BGData$Event == 2|BGData$Event == 3,])
summary(BGData[BGData$Event == "Bolus"|BGData$Event == 2|BGData$Event == 3,])
summary(BGData[BGData$Event == "Bolus"|BGData$Event == "Combination bolus" |BGData$Event == "Extended bolus",])
summary(BGData[BGData$Event == "Bolus",])
summary(BGData[BGData$Event == "Combination bolus",])
summary(BGData[BGData$Event == "Extended bolus",])
summary(BGData[-1:3, BGData$Event == "Bolus",])
summary(BGData[-(1:3), BGData$Event == "Bolus",])
summary(BGData[BGData$Event == "Bolus", -(1:3)])
summary(BGData[BGData$Event == "Combination bolus",-(1:3)])
summary(BGData[BGData$Event == "Extended bolus",-(1:3)])
summary(BGData[BGData$Event == "Bolus", -(1:3)])
table(BGData[BGData$Event == "Bolus", 5,8])
sum(BGData[BGData$Event == "Bolus", 5]==BGData[BGData$Event == "Bolus", 5])
sum(BGData[BGData$Event == "Bolus", 5]==BGData[BGData$Event == "Bolus", 8])
summary(BGData[BGData$Event == "Bolus", -(1:3)])
sum(BGData[BGData$Event == "Bolus",5]==BGData[BGData$Event == "Bolus", 8])
(BGData[BGData$Event == "Bolus",5]==BGData[BGData$Event == "Bolus", 8])
sum(BGData[BGData$Event == "Bolus",5]==BGData[BGData$Event == "Bolus", 8])
sum(BGData[BGData$Event == "Bolus",5]-BGData[BGData$Event == "Bolus", 8] ==0)
BGData$Event == "Bolus",5]
BGData[BGData$Event == "Bolus",5]
BGData[BGData$Event == "Bolus",8]
levels(BGData$Event)
levels(BGData$Descripition1)
levels(BGData$Descripition2)
levels(BGData$Descripition3)
levels(BGData$Descripition4)
levels(BGData$ValueD1)
levels(BGData$ValueD2)
levels(BGData$ValueD3)
levels(BGData$ValueD4)
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(data.frame(BGData$Event, BGData$Value, Carbs))
Bloodglucose = rep(NA, 3343)
Bloodglucose[BGData$Event == "Bloodglucose"] = BGData$Value[BGData$Event == "Bloodglucose"]
head(data.frame(BGData$Event, BGData$Value, Bloodglucose))
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
BGData$Event = factor(BGData$Event)
head(BGData)
levels(BGData$Event)
summary(BGData[BGData$Event == "Bolus", -(1:3)])
levels(BGData$ValueD1)
levels(BGData$ValueD2)
levels(BGData$ValueD3)
levels(BGData$ValueD4)
table(BGData$ValueD4)
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(data.frame(BGData$Event, BGData$Value, Carbs))
Bloodglucose = rep(NA, 3343)
Bloodglucose[BGData$Event == "Bloodglucose"] = BGData$Value[BGData$Event == "Bloodglucose"]
head(data.frame(BGData$Event, BGData$Value, Bloodglucose))
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
BGData$Event = factor(BGData$Event)
head(BGData)
summary(BGData[BGData$Event == "Bolus", -(1:3)])
sum(BGData[BGData$Event == "Bolus",5]-BGData[BGData$Event == "Bolus", 8] ==0)
levels(BGData$ValueD4)
str(BGData)
levels(BGData$Event)
levels(BGData$Descripition1)
levels(BGData$Descripition2)
levels(BGData$Descripition3)
levels(BGData$Descripition4)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
str(BGData)
summary(BGData)
head(BGData)
summary(BGData)
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(data.frame(BGData$Event, BGData$Value, Carbs))
Bloodglucose = rep(NA, 3343)
Bloodglucose[BGData$Event == "Bloodglucose"] = BGData$Value[BGData$Event == "Bloodglucose"]
head(data.frame(BGData$Event, BGData$Value, Bloodglucose))
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
BGData$Event = factor(BGData$Event)
head(BGData)
levels(BGData$Event)
summary(BGData[BGData$Event == "Bolus", -(1:3)])
levels(BGData$Descripition1)
levels(BGData$Descripition2)
levels(BGData$Descripition3)
levels(BGData$Descripition4)
levels(BGData$Descripition5)
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(data.frame(BGData$Event, BGData$Value, Carbs))
Bloodglucose = rep(NA, 3343)
Bloodglucose[BGData$Event == "Bloodglucose"] = BGData$Value[BGData$Event == "Bloodglucose"]
head(data.frame(BGData$Event, BGData$Value, Bloodglucose))
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
BGData$Event = factor(BGData$Event)
head(BGData)
levels(BGData$Event)
summary(BGData[BGData$Event == "Bolus", -(1:3)])
levels(BGData$Descripition5)
levels(BGData$Descripition1)
levels(BGData$Descripition2)
levels(BGData$Descripition3)
levels(BGData$Descripition4)
levels(BGData$Descripition5)
levels(BGData$ValueD1)
levels(BGData$ValueD2)
levels(BGData$ValueD3)
levels(BGData$ValueD4)
levels(BGData$ValueD5)
knitr::opts_chunk$set(echo = TRUE)
BGData = read.csv("Data BG.csv", header = TRUE)
head(BGData)
summary(BGData)
Carbs = rep(NA, 3343)
Carbs[BGData$Event == "Carbs"] = BGData$Value[BGData$Event == "Carbs"]
head(data.frame(BGData$Event, BGData$Value, Carbs))
Bloodglucose = rep(NA, 3343)
Bloodglucose[BGData$Event == "Bloodglucose"] = BGData$Value[BGData$Event == "Bloodglucose"]
head(data.frame(BGData$Event, BGData$Value, Bloodglucose))
BGData$Value[BGData$Event == "Carbs"] = NA
BGData$Value[BGData$Event == "Bloodglucose"] = NA
BGData$Event[BGData$Event == "Carbs"] = NA
BGData$Event[BGData$Event == "Bloodglucose"] = NA
BGData$Event = factor(BGData$Event)
head(BGData)
levels(BGData$Event)
levels(BGData$Descripition1)
levels(BGData$Descripition2)
levels(BGData$Descripition3)
levels(BGData$Descripition4)
levels(BGData$Descripition5)
ImmediateBolus = rep(NA, 3343)
ImmediateBolus = BGData$DValue1[BGData$Descripition1 == "Direct dosis"]
ImmediateBolus = rep(NA, 3343)
BGData$DValue1[BGData$Descripition1 == "Direct dosis"]
BGData$DValue1[BGData$Descripition1 == "Direct dosis"]
BGData$Descripition1 == "Direct dosis"
